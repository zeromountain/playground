const solution = require('./3.js');

test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [1, 0, 1, 0, 0, 1, 1, 1, 1],
      [[1], [7], [8], [4, 7], [1, 3], [3, 4, 8], [0], [6], [2], [1, 4]]
    )
  ).toBe(3);
});
test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [1, 1, 0, 1, 1, 1, 0, 1, 0],
      [[1, 3], [2, 3], [1, 7], [3], [6], [0], [4], [3, 8], [0], [3]]
    )
  ).toBe(3);
});
test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [0, 1, 1, 0, 0, 0, 0, 1, 0],
      [
        [0, 1, 2, 4, 6],
        [0, 3, 5, 7],
        [1, 8],
        [0, 1, 4],
        [1, 8],
        [3],
        [3, 4, 6, 7],
        [1, 6, 8],
        [6],
        [0, 1, 5, 7],
      ]
    )
  ).toBe(3);
});
test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [0, 0, 0, 1, 1, 0, 0, 0, 1],
      [
        [3, 4],
        [3, 6],
        [1],
        [0, 2, 6],
        [3, 4],
        [2],
        [0, 3, 4],
        [1, 2, 5, 8],
        [7, 8],
        [2, 3, 5, 8],
      ]
    )
  ).toBe(4);
});
test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [1, 1, 1, 1, 0, 1, 0, 0, 0],
      [
        [0],
        [3, 6, 8],
        [2, 8],
        [2, 5, 7],
        [3],
        [3],
        [0],
        [5, 8],
        [3, 5, 8],
        [0, 2, 4, 7, 8],
      ]
    )
  ).toBe(5);
});
test('모든 두더지를 나오게 하는 경우의 수는?', () => {
  expect(
    solution(
      [1, 1, 1, 0, 0, 1, 1, 0, 1],
      [
        [8],
        [0, 2, 3],
        [1, 2, 3, 5, 7],
        [0],
        [6, 7],
        [0, 2, 6],
        [3, 5, 7, 8],
        [1],
        [2],
        [3, 4],
      ]
    )
  ).toBe(5);
});
